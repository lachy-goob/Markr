services:
  # Markr Application
  app:
    build: . # Building from current dir
    container_name: markr_app
    ports:
      - "4567:4567"
    volumes:
      - .:/usr/src/app # Mount current dir to /usr/src/app
      - /usr/src/app/node_modules # Prevent overriding node_modules
    environment:
      - NODE_ENV=development
      - DATABASE_HOST=db
      - DATABASE_PORT=5432
      - POSTGRES_USER=markr_user
      - POSTGRES_PASSWORD=markr_password
      - POSTGRES_DB=markr_db
      - DATABASE_URL=postgresql://markr_user:markr_password@db:5432/markr_db
    depends_on:
      db:
        condition: service_healthy
    networks:
      - markr_network

  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: markr_postgres_db
    restart: unless-stopped
    environment:
      POSTGRES_USER: markr_user
      POSTGRES_PASSWORD: markr_password
      POSTGRES_DB: markr_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    networks:
      - markr_network
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB -h localhost",
        ]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

  # Test Runner
  test:
    build: .
    container_name: markr_test
    command: ["sh", "-c", "./scripts/wait-for-postgres.sh"]
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: markr_user
      DB_PASSWORD: markr_password
      DB_NAME: test_db
      DATABASE_URL: postgresql://markr_user:markr_password@db:5432/markr_db
    depends_on:
      db:
        condition: service_healthy
    profiles: ["test"]
    volumes:
      - .:/usr/src/app
    networks:
      - markr_network

volumes:
  postgres_data:

networks:
  markr_network:
    driver: bridge
